%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.7
%%CreationDate: Tue Sep 23 12:34:43 2014
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
uuggauguuggccuaguucuguguggaagacuagugauuuuguuguuuuuagauaacuaaaucgacaacaaaucacagucugccauauggcacaggccaugccucuacag\
) def
/coor [
[97.88916016 331.92849731]
[107.45773315 319.05130005]
[106.60910797 304.07534790]
[105.76047516 289.09936523]
[104.91184998 274.12338257]
[96.46689606 261.85424805]
[103.41106415 247.63842773]
[102.56243896 232.66244507]
[101.50197601 217.69998169]
[100.22988129 202.75402832]
[98.95779419 187.80805969]
[97.68570709 172.86209106]
[96.41362000 157.91613770]
[95.14152527 142.97016907]
[91.38368988 136.47760010]
[94.05104828 127.58424377]
[93.20242310 112.60826874]
[85.69899750 100.81037903]
[91.82160187 88.24035645]
[90.97297668 73.26438141]
[90.12434387 58.28841019]
[89.27571869 43.31243515]
[88.42709351 28.33645821]
[87.57846832 13.36048317]
[86.72984314 -1.61549222]
[85.88121796 -16.59146690]
[77.37556458 -29.93179893]
[84.38042450 -43.07642365]
[83.53179932 -58.05239868]
[82.68317413 -73.02837372]
[81.83454895 -88.00434875]
[80.98592377 -102.98032379]
[77.33096313 -111.51542664]
[80.33129120 -118.39095306]
[79.90680695 -133.38494873]
[79.48232269 -148.37893677]
[79.05783844 -163.37292480]
[78.63335419 -178.36692810]
[78.20887756 -193.36091614]
[77.78439331 -208.35490417]
[74.37242889 -216.99002075]
[77.56612396 -223.77789307]
[77.56612396 -238.77789307]
[77.56612396 -253.77789307]
[77.56612396 -268.77789307]
[77.56612396 -283.77789307]
[77.56612396 -298.77789307]
[77.14163971 -313.77188110]
[76.29301453 -328.74786377]
[75.44438934 -343.72384644]
[74.59576416 -358.69979858]
[73.74713898 -373.67578125]
[64.30957031 -387.08712769]
[71.44991302 -401.85018921]
[87.82279968 -402.77795410]
[96.58519745 -388.91604614]
[88.72311401 -374.52441406]
[89.57173920 -359.54843140]
[90.42036438 -344.57244873]
[91.26898956 -329.59649658]
[92.11761475 -314.62051392]
[95.13230133 -310.74462891]
[95.64372253 -304.89785767]
[92.56612396 -298.77789307]
[92.56612396 -283.77789307]
[92.56612396 -268.77789307]
[92.56612396 -253.77789307]
[92.56612396 -238.77789307]
[92.56612396 -223.77789307]
[92.77838135 -208.77938843]
[93.20286560 -193.78540039]
[93.62734985 -178.79141235]
[94.05183411 -163.79740906]
[94.47631836 -148.80342102]
[94.90079498 -133.80943298]
[95.32527924 -118.81543732]
[95.96189880 -103.82894897]
[96.81052399 -88.85297394]
[97.65914917 -73.87699890]
[98.50777435 -58.90102386]
[99.35639954 -43.92504883]
[107.80135345 -31.65590096]
[100.85719299 -17.44009399]
[101.70581818 -2.46411800]
[102.55444336 12.51185703]
[103.40306854 27.48783302]
[104.25169373 42.46380615]
[105.10031891 57.43978119]
[105.94895172 72.41575623]
[106.79757690 87.39173126]
[114.30100250 99.18962097]
[108.17839813 111.75964355]
[109.02702332 126.73561859]
[110.08749390 141.69808960]
[111.35958099 156.64404297]
[112.63166809 171.59001160]
[113.90375519 186.53596497]
[115.17584229 201.48193359]
[116.44793701 216.42788696]
[120.34296417 224.85615540]
[117.53841400 231.81382751]
[118.38703918 246.78979492]
[126.89269257 260.13012695]
[119.88782501 273.27474976]
[120.73645782 288.25073242]
[121.58508301 303.22671509]
[122.43370819 318.20266724]
[133.39573669 329.91650391]
[130.92976379 345.76889038]
[116.92745209 353.59927368]
] def
/pairs [
[2 107]
[3 106]
[4 105]
[5 104]
[7 102]
[8 101]
[9 99]
[10 98]
[11 97]
[12 96]
[13 95]
[14 94]
[16 93]
[17 92]
[19 90]
[20 89]
[21 88]
[22 87]
[23 86]
[24 85]
[25 84]
[26 83]
[28 81]
[29 80]
[30 79]
[31 78]
[32 77]
[34 76]
[35 75]
[36 74]
[37 73]
[38 72]
[39 71]
[40 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[47 64]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
